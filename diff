diff --git a/bin/sculpture.dll b/bin/sculpture.dll
index 8bd026c..8f197e5 100644
Binary files a/bin/sculpture.dll and b/bin/sculpture.dll differ
diff --git a/bin/sculpture_temp.dll b/bin/sculpture_temp.dll
index 8bd026c..47057b2 100644
Binary files a/bin/sculpture_temp.dll and b/bin/sculpture_temp.dll differ
diff --git a/bin/win32_sculpture.exe b/bin/win32_sculpture.exe
index 1e86c0b..0836481 100644
Binary files a/bin/win32_sculpture.exe and b/bin/win32_sculpture.exe differ
diff --git a/bin/win32_sculpture.pdb b/bin/win32_sculpture.pdb
index 65c992d..4759210 100644
Binary files a/bin/win32_sculpture.pdb and b/bin/win32_sculpture.pdb differ
diff --git a/res/lvl/desired/level 10.png b/res/lvl/desired/level 10.png
index 2759544..522cb7a 100644
Binary files a/res/lvl/desired/level 10.png and b/res/lvl/desired/level 10.png differ
diff --git a/src/3d.c b/src/3d.c
index c1b94cf..473811c 100644
--- a/src/3d.c
+++ b/src/3d.c
@@ -230,12 +230,6 @@ static void object_draw(Object3D *obj) {
 
     vec2 *projected = project(points, count);
 
-#if 0
-    for (int i = 0; i < count; i++) {
-        projected[i].y += GUI_H;
-    }
-#endif
-
     Vertex *final_points = PushArray(gs->transient_memory, 4, sizeof(Vertex));
 
     for (int i = 0; i < count; i++) {
diff --git a/src/assets.c b/src/assets.c
index be0aed4..86bb8fa 100644
--- a/src/assets.c
+++ b/src/assets.c
@@ -168,15 +168,15 @@ static void surfaces_init(Surfaces *surfaces) {
 //~ Fonts
 
 static void fonts_init(Fonts *fonts) {
-    fonts->font          = RenderLoadFont("Courier Prime.ttf", Scale(font_sizes[0]));
-    fonts->font_times    = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[1]));
-    fonts->font_courier  = RenderLoadFont("LiberationMono-Regular.ttf", Scale(font_sizes[3]));
-    fonts->font_small    = RenderLoadFont("consola.ttf", Scale(font_sizes[4]));
-    fonts->font_bold_small = RenderLoadFont("courbd.ttf", Scale(font_sizes[5]));
-    fonts->font_title    = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[6]));
-    fonts->font_title_2  = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[7]));
-    fonts->font_titlescreen = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[8]));
-    fonts->font_converter_gui = RenderLoadFont("consola.ttf", Scale(font_sizes[9]));
+    fonts->font               = RenderLoadFont("Courier Prime.ttf", Scale(font_sizes[0]));
+    fonts->font_times         = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[1]));
+    fonts->font_courier       = RenderLoadFont("LiberationMono-Regular.ttf", Scale(font_sizes[2]));
+    fonts->font_small         = RenderLoadFont("consola.ttf", Scale(font_sizes[3]));
+    fonts->font_bold_small    = RenderLoadFont("courbd.ttf", Scale(font_sizes[4]));
+    fonts->font_title         = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[5]));
+    fonts->font_title_2       = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[6]));
+    fonts->font_titlescreen   = RenderLoadFont("EBGaramond-Medium.ttf", Scale(font_sizes[7]));
+    fonts->font_converter_gui = RenderLoadFont("consola.ttf", Scale(font_sizes[8]));
 
     for (size_t i = 0; i < FONT_COUNT; i++) {
         TTF_SetFontHinting(fonts->fonts[i]->handle, TTF_HINTING_LIGHT_SUBPIXEL);
@@ -193,11 +193,11 @@ static void fonts_deinit(Fonts *fonts) {
 
 static void audio_setup_initial_channel_volumes(void) {
     Mix_Volume(AUDIO_CHANNEL_CHISEL, AUDIO_CHISEL_VOLUME);
-    Mix_Volume(AUDIO_CHANNEL_GUI, AUDIO_GUI_VOLUME);
-    Mix_Volume(AUDIO_CHANNEL_MUSIC, AUDIO_MUSIC_VOLUME);
+    Mix_Volume(AUDIO_CHANNEL_GUI,    AUDIO_GUI_VOLUME);
+    Mix_Volume(AUDIO_CHANNEL_MUSIC,  AUDIO_MUSIC_VOLUME);
 }
 
-static Sound load_sound(const char *file, f64 volume) {
+static Sound load_sound(const char *file, f32 volume) {
     Sound result = {0};
     
     result.sound = Mix_LoadWAV(file);
diff --git a/src/assets.h b/src/assets.h
index 961b442..938940c 100644
--- a/src/assets.h
+++ b/src/assets.h
@@ -160,8 +160,7 @@ typedef union Surfaces {
     };
 } Surfaces;
 
-static_assert(sizeof(Surfaces) == SURFACE_COUNT*sizeof(SDL_Surface*),
-              "The Surfaces struct size is not equal to the surface count size!");
+static_assert(sizeof(Surfaces) == SURFACE_COUNT*sizeof(SDL_Surface*), "a");
 
 #define FONT_COUNT 9
 
diff --git a/src/audio.c b/src/audio.c
index f3ec11a..58b261a 100644
--- a/src/audio.c
+++ b/src/audio.c
@@ -68,10 +68,11 @@ void audio_halt_music(void) {
     gs->audio_handler.music_volume = 0;
 }
 
+// This is called every frame and sets the current music according to certain conditions.
 void audio_set_music_accordingly(void) {
     int level_number = gs->level_current+1;
     
-    if (level_number == 11) {
+    if (level_number == 11 && gs->obj.active) {
         audio_set_music(MUSIC_EXPLITIVE);
     } else {
         audio_set_music(MUSIC_NONE);
diff --git a/src/input.c b/src/input.c
index 0bca908..2288864 100644
--- a/src/input.c
+++ b/src/input.c
@@ -60,15 +60,15 @@ static void input_tick_normal(Game_State *state) {
     in->real_mx -= gs->real_width/2 - gs->game_width/2;
     in->real_my -= gs->real_height/2 - gs->game_height/2;
 
-    in->mx = (in->real_mx+state->render.view.x)/state->S;
+    in->mx = round(((f32)in->real_mx+state->render.view.x)/state->S);
     in->my = (in->real_my+state->render.view.y)/state->S;
-
+    
     // Hardcode
     if (gs->gw == 128) {
         in->mx += 32;
     }
 
-    in->my -= GUI_H/state->S;
+    in->my -= round((f32)GUI_H/state->S);
 
     input_tick_mouse_pressed(in);
     input_tick_keys_pressed(in);
diff --git a/src/narration.h b/src/narration.h
index 1279d43..afba6fb 100644
--- a/src/narration.h
+++ b/src/narration.h
@@ -4,7 +4,7 @@
 #define NARRATOR_ALPHA 10
 #define NARRATOR_HANG_TIME 14 // Frames
 
-#define SHOW_NARRATION ALASKA_RELEASE_MODE
+#define SHOW_NARRATION 1//ALASKA_RELEASE_MODE
 
 ////////////////////////////////////////////////////////////////
 #define NARRATION_LEVEL_1 \
@@ -27,7 +27,7 @@
 "He could fully picture it: a symbolic piece with\r"\
 "endless complex details.\n"\
 "... No.\n"\
-"Only once he'd sharpened his skills will he\r"\
+"Only once he sharpened his skills would he\r"\
 "dare create something real.\n"\
 "For a moment, his flame flickered.\n"\
 
@@ -80,11 +80,10 @@
 "but this time, he was ready.\n"\
 "A glittering white radiated from Max's imagination,\r"\
 "outlining an object with layers of diamond and ice.\n"\
-"The prize taunted Max. He ached to reveal it.\n"\
+"The prize taunted Max, aching to reveal it.\n"\
 "He said,\r"\
 "\"I can do this.\"\n"\
-"\"I know I can.\"\n"\
-"\"I have to.\"\n"\
+"\"I know I can- I have to.\"\n"\
 
 #define NARRATION_LEVEL_11 \
 "Max collapsed into his chair, debilitated,\r"\
diff --git a/src/shared.h b/src/shared.h
index 6dafc89..3d0af22 100644
--- a/src/shared.h
+++ b/src/shared.h
@@ -63,8 +63,6 @@ typedef struct Game_State {
 
     Audio_Handler audio_handler;
     
-    bool use_software_renderer;
-
     SDL_Window *window;
     SDL_Renderer *renderer;
     Render render;
diff --git a/src/tutorial.h b/src/tutorial.h
index 74de1e8..4d6add1 100644
--- a/src/tutorial.h
+++ b/src/tutorial.h
@@ -1,7 +1,7 @@
 #ifdef ALASKA_RELEASE_MODE
   #define SHOW_TUTORIAL 1
 #else
-  #define SHOW_TUTORIAL 1
+  #define SHOW_TUTORIAL 0
 #endif
 
 #define MAX_TUTORIAL_LINES 10
diff --git a/src/win32_main.c b/src/win32_main.c
index 32d5ea1..f326aae 100644
--- a/src/win32_main.c
+++ b/src/win32_main.c
@@ -197,7 +197,7 @@ static bool prefix(const char *pre, const char *str) {
 static void win32_game_init(Game_State *state) {
     srand((unsigned int) time(0));
 
-    game_init_sdl(state, "Alaska", state->use_software_renderer);
+    game_init_sdl(state, "Alaska", false);
 
     // Load all assets... except for render targets.
     // We can't create render targets until levels
@@ -326,7 +326,7 @@ inline bool win32_SetProcessDpiAware(void) {
     return ret;
 }
 
-int win32_main(int argc, char **argv) {
+int win32_main(void) {
     win32_SetProcessDpiAware();
 
 #ifndef ALASKA_RELEASE_MODE
@@ -354,22 +354,7 @@ int win32_main(int argc, char **argv) {
     if (fullscreen) {
         scale = calculate_scale(true, &dw, &dh);
     }
-
-    bool use_software_renderer = false;
-    if (argc > 1) {
-        for (int i = 1; i < argc; i++) {
-            if (0==strcmp(argv[i], "-renderer=gpu")) {
-                use_software_renderer = false;
-            } else if (0==strcmp(argv[i], "-renderer=cpu")) {
-                use_software_renderer = true;
-            } else if (prefix("-scale=", argv[i])) {
-                scale = atoi(argv[i]+7);
-            } else if (0==strcmp(argv[i], "-fullscreen")) {
-                fullscreen = 1;
-            }
-        }
-    }
-
+    
 #ifndef ALASKA_RELEASE_MODE
     Game_Code game_code = {0};
     load_game_code(&game_code);
@@ -383,7 +368,6 @@ int win32_main(int argc, char **argv) {
     gs->desktop_w = dw;
     gs->desktop_h = dh;
 
-    gs->use_software_renderer = use_software_renderer;
     gs->S = scale;
 
     gs->fullscreen = fullscreen;
@@ -505,5 +489,5 @@ int WINAPI WinMain(HINSTANCE hInstance,
     (void)hPrevInstance;
     (void)lpCmdLine;
     (void)nShowCmd;
-    win32_main(0, null);
+    win32_main();
 }
diff --git a/todo.txt b/todo.txt
index f9b2e46..1e7aaa5 100644
--- a/todo.txt
+++ b/todo.txt
@@ -1,6 +1,17 @@
-# TODO
+TODO
 
-  - Update: "The prize taunted him, with Max aching to reveal it."
+  - Off-by-one move_mouse_to_grid_position when chiseling something
+    to the left of the main screen.
+
+  - Move the Note: in the material converter section of the recipe book
+    to be item counts instead.
+
+  - The whole thing with Max not making the sculptures to his desires
+    doesn't work as well if the player doesn't adhere to Max's desired-s
+    in the first couple levels. So we need to explicitly make it so that
+    Max is fine doing whatever he wants with the first couple levels,
+    because he doesn't view it as "real". Level 7+ however he believes
+    are more significant to him.
 
   - Something to do with the rain preferring the left side of
     the scene, when stuff is splashing on to material?
